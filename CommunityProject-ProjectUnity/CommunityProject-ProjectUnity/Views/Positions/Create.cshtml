@model CommunityProject_ProjectUnity.Models.Position

@{
    ViewBag.Title = "Create";
}

<h2>Create Position</h2>
<script src="@Url.Content("~/Scripts/jquery.min.js")" type="text/javascript"></script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js"></script>
<script type="text/javascript">
    @*<script src="~/Scripts/PositionCreate.js"></script>*@
    $(function () {

        $("#PositionType").change(function () {

            var selectedItemValue = $(this).val();

            if (selectedItemValue == "Teaching") {
                $('#quallist').removeClass();
            }
            else {
                $('#quallist').addClass("invisible");
                $('skilldiv').removeClass();
            }
            if (selectedItemValue == "Non-Teaching") {

                $('#skilldiv').removeClass();
            }
            else {
                $('skilldiv').addClass("invisible");
                $('#quallist').removeClass();
            }

        });
    });
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PositionType, "Job Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PositionType", null, "Select the Job Type", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PositionType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.JobCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JobCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JobCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PositionDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PositionDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PositionDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SalaryType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalaryType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalaryType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PositionSalary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PositionSalary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PositionSalary, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div id="skilldiv" class="invisible">
                <div class="col-md-2">&nbsp;</div>
                <div class="form-group col-md-4">
                    <label class="control-label" id="availlabel">Available Skills:</label><br />
                    @Html.ListBox("availOptions", (MultiSelectList)ViewBag.availOpts, new { @class = "form-control" })
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <button type="button" id="btnLeftSkill" class="btn  btn-primary  btn-group-lg">
                            <span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span>
                        </button>
                    </div>
                    <div class="form-group">
                        <button type="button" id="btnRightSkill" class="btn btn-default btn-group-lg">
                            <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
                        </button>
                        <div></div>
                    </div>
                </div>
                <div class="form-group col-md-4">
                    <label class="control-label" id="selectlabel">Skills Assigned:</label><br />
                    @Html.ListBox("selectedOptions", (MultiSelectList)ViewBag.selOpts, new { @class = "form-control" })

                </div>
            </div>

        </div>

        <div class="row">
            <div id="quallist" class="invisible">
                <div class="col-md-2">&nbsp;</div>
                <div class="form-group col-md-4">
                    <label class="control-label" id="availlabel">Available Qualifiations:</label><br />
                    @Html.ListBox("availqualOptions", (MultiSelectList)ViewBag.availqualOpts, new { @class = "form-control" })
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <button type="button" id="btnLeftQ" class="btn  btn-primary  btn-group-lg">
                            <span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span>
                        </button>
                    </div>
                    <div class="form-group">
                        <button type="button" id="btnRightQ" class="btn btn-default btn-group-lg">
                            <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
                        </button>
                        <div></div>
                    </div>
                </div>
                <div class="form-group col-md-4">
                    <label class="control-label" id="selectlabel">Qualifications Assigned:</label><br />
                    @Html.ListBox("selectedqualOptions", (MultiSelectList)ViewBag.selqualOpts, new { @class = "form-control" })

                </div>
            </div>

        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btnPSubmit" value="Create" class="btn btn-primary btn col-lg-2" />
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-primary col-lg-2 col-md-offset-2" })
            </div>
        </div>
    </div>
    <table class="model-state">
        @foreach (var item in ViewContext.ViewData.ModelState)
        {
            if (item.Value.Errors.Any())
            {
                <tr>
                    <td><b>@item.Key</b></td>
                    <td>@((item.Value == null || item.Value.Value == null) ? "<null>" : item.Value.Value.RawValue)</td>
                    <td>@(string.Join("; ", item.Value.Errors.Select(x => x.ErrorMessage)))</td>
                </tr>
            }
        }
    </table>
}

@*<div>
        @Html.ActionLink("Cancel", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/PositionSkills")

}
